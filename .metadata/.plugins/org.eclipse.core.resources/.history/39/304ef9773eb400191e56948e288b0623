package fellowship;
import java.util.*;
public class SortAndSearch {
	/*********Searching element in integer array using Binary search****************/
	public static long[] time=new long[6];
	
	public static void binarySearch4int(int arr[], int key){  
		 long startTime = System.nanoTime();
		int first = 0, last = arr.length - 1; 
		   int mid = (first + last)/2;  
		   while( first <= last ){  
		      if ( arr[mid] < key ){  
		        first = mid + 1;     
		      }else if ( arr[mid] == key ){  
		        System.out.println("Element is found at index: " + mid);  
		        break;  
		      }else{  
		         last = mid - 1;  
		      }  
		      mid = (first + last)/2;  
		   }  
		   if ( first > last ){  
		      System.out.println("Element is not found!");  
		   } 
		   long stopTime = System.nanoTime();
		      long elapsedTime = stopTime - startTime;
		      System.out.println("***************************************************************"+elapsedTime);
		      time[0]=elapsedTime;
		 }  
	
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/*********Sorting elements in integer array using Bubble Sort ****************/
	public static void bubbleSort4int(int[] arr) {  
		long startTime = System.nanoTime();
        int n = arr.length;  
        int temp = 0;  
         for(int i=0; i < n; i++){  
                 for(int j=1; j < (n-i); j++){  
                          if(arr[j-1] > arr[j]){  
                                 //swap elements  
                                 temp = arr[j-1];  
                                 arr[j-1] = arr[j];  
                                 arr[j] = temp;  
                         }  
                          
                 }  
         }  
         System.out.println("Array After Bubble Sort");  
         for(int i=0; i < arr.length; i++){  
                 System.out.print(arr[i] + " ");  
         }  
         System.out.println();
         long stopTime = System.nanoTime();
	      long elapsedTime = stopTime - startTime;
	      System.out.println("***************************************************************"+elapsedTime);
	      time[1]=elapsedTime;
  
    }  
	
	/*******************************************************************************************************/
	/*********Sorting elements in integer array using Insertion Sort ****************/
	public static void insertionSort4int(int array[]) {  
		long startTime = System.nanoTime();
        int n = array.length;  
        for (int j = 1; j < n; j++) {  
            int key = array[j];  
            int i = j-1;  
            while ( (i > -1) && ( array [i] > key ) ) {  
                array [i+1] = array [i];  
                i--;  
            }  
            array[i+1] = key;  
        }
        System.out.println("After Insertion Sort");    
        for(int i=0; i < array.length; i++){     
            System.out.print(array[i] + " "); 
        }
        System.out.println();
        long stopTime = System.nanoTime();
	      long elapsedTime = stopTime - startTime;
	      System.out.println("***************************************************************"+elapsedTime);
	      time[2]=elapsedTime;
    }  
	
	/*************************************************************************************************/
	/*********Sorting elements in String array using Bubble Sort ****************/
	public static void bubbleSort4str(String[] arrs) {
		long startTime = System.nanoTime();
	 String temp="";
     System.out.println("Sorted string...");
     for (int j = 0; j < arrs.length; j++) {
        for (int i = j + 1; i < arrs.length; i++) {
           // comparing strings
           if (arrs[i].compareTo(arrs[j]) < 0) {
              temp = arrs[j];
              arrs[j] = arrs[i];
              arrs[i] = temp;
           }
        }
        
     }
     System.out.println("Array After Bubble Sort");  
     for(int i=0; i < arrs.length; i++){  
             System.out.print(arrs[i] + " ");  
     }  
     System.out.println();
     long stopTime = System.nanoTime();
     long elapsedTime = stopTime - startTime;
     System.out.println("***************************************************************"+elapsedTime);
     time[3]=elapsedTime;
     }
     
     /***************************************************************************************************/
	
	/*********Sorting elements in String array using Insertion Sort ****************/
	public static void insertionSort4str(String array[]) { 
		long startTime = System.nanoTime();
		int i,j;
		  String key;
		  for (j = 1; j < array.length; j++) { //the condition has changed
		    key = array[j];
		    i = j - 1;
		    while (i >= 0) {
		      if (key.compareTo(array[i]) > 0) {//here too
		        break;
		      }
		      array[i + 1] = array[i];
		      i--;
		    }
		  }
		  System.out.println("After Insertion Sort"+Arrays.toString(array));
		  long stopTime = System.nanoTime();
	      long elapsedTime = stopTime - startTime;
	      System.out.println("***************************************************************"+elapsedTime);
	      time[4]=elapsedTime;
	}
	
	/**********************************************************************************/
	
	static void binarySearch4str(String[] arr, String x) {
		long startTime = System.nanoTime();
        int left = 0, right = arr.length - 1; int m=0;
        while (left <= right) { 
             m = left + (right - left) / 2; 
            
            int res = x.compareTo(arr[m]); 
           
            // Check if x is present at mid 
            if (res == 0) 
            	System.out.println("Element is found at index: " + m);
  
            // If x greater, ignore left half 
            if (res > 0) 
            	left = m + 1; 
            	 
  
            // If x is smaller, ignore right half 
            else
            	right = m - 1; 
        } 

        if ( left ==m || right==m ) 
		      System.out.println("Element is not found!"); 
        long stopTime = System.nanoTime();
	      long elapsedTime = stopTime - startTime;
	      System.out.println("***************************************************************"+elapsedTime);
	      time[5]=elapsedTime;
    } 
	
	/********************************************************************/
	
		public static void main(String args[]){  
		        int arr[] = {3,60,35,2,45,320,5};
		        
		        bubbleSort4int(arr);
		        
		        insertionSort4int(arr);
		        
		        Arrays.sort(arr);
		        int key = 35;    
		        binarySearch4int(arr,key);  
		        
		        String str[] = { "bollo", "cat", "how", "dog", "you"};
		        
		        bubbleSort4str(str);
		        
		        insertionSort4str(str);
		        
		        Arrays.sort(str);
		        String skey="dogs";
		        binarySearch4str(str,skey);
		        
		        Arrays.sort(time);
		        String s1=Arrays.toString(time);
		        
		        long temp=0;
		        for (int i = 0; i < time.length; i++)  {
		            for (int j = i + 1; j < time.length; j++) {
		                if (time[i] < time[j]) {
		                    temp = time[i];
		                    time[i] = time[j];
		                    time[j] = temp;
		                }
		            }
		        }
		        System.out.print(time+"********************************************************* ");
		 }  
		}  